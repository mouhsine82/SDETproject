This keyword refers to the current class/object/instance

this can be used to access current class instance variables and methods

this() -used with constructor to call current class constructor

Inheritance
What it is? - process when subclass acquires properties and behavior from the super class

Why to use it? - for code reusability, readability, eliminate code redundancy

How to implement? - using extends keyword

class Parent {

}

class Child extends Parent{

}
Inheritance Types:
Single - 1 child 1 parent
Multilevel - grandparent -> parent -> child
Hierarchical -  1 parent multiple children

Can a child class have multiple PARENTS? - Multiple Inheritance
    using class concept - NO

Access Modifiers:
 4 types

 from less restrictive to the most

 public -> protected > default -> private

Private members (variables and methods) DO NOT PARTICIPATE in the inheritance

VARIABLES SYNTAX

    OPTIONAL         OPTIONAL           MUST    MUST
access modifiers  nonAccess modifier  dataType  name;


METHODS SYNTAX

   OPTIONAL          OPTIONAL          MUST      MUST
access modifiers  nonAccess modifier  returnType name() {}

super keyword - used to refer to the immediate parent class

can be used with variables and methods
can be used with constructors

Flower flower1 = new Flower();

new -> creates an Object
Flower(); -> initializes the object (calling a constructor)

flower1 -> is variable(reference variable)
Flower -> Type (class)

        String str=new String();
        str="Hello";

        String str1=new String("hello");